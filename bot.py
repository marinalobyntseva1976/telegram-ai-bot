import telebot
from telebot import types
import json
import os
from datetime import datetime

from dotenv import load_dotenv

# Load environment variables
load_dotenv()
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)

bot = telebot.TeleBot(TOKEN)

# –î–∞–Ω–Ω—ã–µ –æ –∫—É—Ä—Å–∞—Ö AI-Adminpriority
COURSES_DATA = {
    "greeting": "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AI-Adminpriority!\n\n–Ø –ø–æ–º–æ–≥—É –≤–∞–º —É–∑–Ω–∞—Ç—å –æ –Ω–∞—à–∏—Ö –∫—É—Ä—Å–∞—Ö –ø–æ —Ä–∞–±–æ—Ç–µ —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤ –∏ HR-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤, –∏ –¥—Ä—É–≥–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª:",
    
    "courses": {
        "gpt_express": {
            "name": "GPT-—ç–∫—Å–ø—Ä–µ—Å—Å",
            "description": "–ë–∞–∑–æ–≤—ã–π –≤–µ—á–µ—Ä–Ω–∏–π –∫—É—Ä—Å –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é ChatGPT –¥–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á:\n‚Ä¢ –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–æ–≤, –ø–æ–ª–æ–∂–µ–Ω–∏–π, –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–æ–∫\n‚Ä¢ –°—Ü–µ–Ω–∞—Ä–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π\n‚Ä¢ –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö\n‚Ä¢ –ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ"
        },
        "ai_visuals": {
            "name": "AI-–≤–∏–∑—É–∞–ª—ã –∏ GPT 2.0",
            "description": "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫—É—Ä—Å –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π:\n‚Ä¢ –†–∞–±–æ—Ç–∞ —Å –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–≤—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ (Gamma, Leonardo, Stable Diffusion)\n‚Ä¢ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞–±–æ—Ç—ã —Å GPT\n‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –≤–∏–∑—É–∞–ª–æ–≤"
        }
    },
    
    "format": "üìÖ –§–æ—Ä–º–∞—Ç –∏ —É—Å–ª–æ–≤–∏—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:\n\n‚Ä¢ –§–æ—Ä–º–∞—Ç: —Ç–æ–ª—å–∫–æ –æ—Ñ–ª–∞–π–Ω (–ú–æ—Å–∫–≤–∞)\n‚Ä¢ –ù–∞—á–∞–ª–æ: 18:00\n‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ~3,5 —á–∞—Å–∞\n‚Ä¢ –ü–µ—Ä–µ—Ä—ã–≤: 30 –º–∏–Ω—É—Ç\n‚Ä¢ –ú–µ—Å—Ç–æ: —É–¥–æ–±–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –≤ –ú–æ—Å–∫–≤–µ (–∞–¥—Ä–µ—Å –ø—Ä–∏—Å—ã–ª–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)",
    
    "experience": "‚ùì –ù—É–∂–µ–Ω –ª–∏ –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏?\n\n–ù–µ—Ç! –û–±—É—á–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –±–∞–∑–æ–≤—ã—Ö —à–∞–≥–æ–≤:\n‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Å–µ—Ä–≤–∏—Å–∞—Ö\n‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ VPN (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)\n‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞\n‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤\n\n–í—Å—ë –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—à–∞–≥–æ–≤–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ. –î–∞–∂–µ –µ—Å–ª–∏ –≤—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–ª–∏ —Å AI, –≤—ã –±—ã—Å—Ç—Ä–æ —Ä–∞–∑–±–µ—Ä—ë—Ç–µ—Å—å.",
    
    "benefits": "üéØ –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞ –∫—É—Ä—Å–µ?\n\n‚Ä¢ –ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –∑–∞–ø—Ä–æ—Å–æ–≤ (–ø—Ä–æ–º–ø—Ç–æ–≤) –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á\n‚Ä¢ –ù–∞–≤—ã–∫ —Ä–∞–±–æ—Ç—ã —Å AI –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ä—É—Ç–∏–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤\n‚Ä¢ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–≤–æ–∏–º–∏ —Ä—É–∫–∞–º–∏ AI-–≤–∏–∑—É–∞–ª—ã –∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏\n‚Ä¢ –ü–æ–Ω–∏–º–∞–Ω–∏–µ, –∫–∞–∫ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –≤ —Ä–∞–±–æ—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Ä–µ—Å—É—Ä—Å–æ–≤",
    
    "teacher": "üë©‚Äçüè´ –ö—Ç–æ –ø—Ä–µ–ø–æ–¥–∞—ë—Ç?\n\n–ö—É—Ä—Å—ã –≤–µ–¥—ë—Ç –ú–∞—Ä–∏–Ω–∞ –õ–æ–±—ã–Ω—Ü–µ–≤–∞ ‚Äî –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å –∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã AI-Adminpriority, –±—ã–≤—à–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä hh.ru, —ç–∫—Å–ø–µ—Ä—Ç –≤ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –æ—Ñ–∏—Å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –≤–Ω–µ–¥—Ä–µ–Ω–∏–∏ ESG-–∏–Ω–∏—Ü–∏–∞—Ç–∏–≤ –∏ –Ω–µ–º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–π –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞.\n\n–ú–∞—Ä–∏–Ω–∞ ‚Äî –ø—Ä–∞–∫—Ç–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –æ–±—É—á–∞–µ—Ç —Ä–∞–±–æ—Ç–µ —Å AI –Ω–∞ –ø—Ä–∏–º–µ—Ä–∞—Ö —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤ –∏ HR.",
    
    "pricing": "üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å:\n\n‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç: 2 500 ‚ÇΩ\n‚Ä¢ –î–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∂—É—Ä–Ω–∞–ª–∞ ¬´–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä¬ª: 1 500 ‚ÇΩ\n‚Ä¢ –î–ª—è –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏ –∏ HR: —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ –∑–∞–ø—Ä–æ—Å—É",
    
    "registration": "üìù –ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è?\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–∏—Å—å–º–æ –Ω–∞ team@adminpriority.ru —Å:\n‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ–º –∫—É—Ä—Å–∞\n‚Ä¢ –î–∞—Ç–æ–π –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è\n\n–í –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –¥–µ—Ç–∞–ª–∏.",
    
    "contacts": "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã:\n\n‚Ä¢ Telegram: @marnlo\n‚Ä¢ Email: team@adminpriority.ru\n‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: info@admdir.ru"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def create_main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn1 = types.KeyboardButton('üìö –ö—É—Ä—Å—ã')
    btn2 = types.KeyboardButton('üìÖ –§–æ—Ä–º–∞—Ç –æ–±—É—á–µ–Ω–∏—è')
    btn3 = types.KeyboardButton('‚ùì –ù—É–∂–µ–Ω –ª–∏ –æ–ø—ã—Ç?')
    btn4 = types.KeyboardButton('üéØ –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç–µ?')
    btn5 = types.KeyboardButton('üë©‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å')
    btn6 = types.KeyboardButton('üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å')
    btn7 = types.KeyboardButton('üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
    btn8 = types.KeyboardButton('üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã')
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8)
    return markup

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_name = message.from_user.first_name
    welcome_text = f"üëã –ü—Ä–∏–≤–µ—Ç, {user_name}!\n\n" + COURSES_DATA["greeting"]
    bot.reply_to(message, welcome_text, reply_markup=create_main_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = "ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n/help - –ü–æ–º–æ—â—å\n/courses - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–∞—Ö\n/contacts - –ö–æ–Ω—Ç–∞–∫—Ç—ã"
    bot.reply_to(message, help_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_text(message):
    text = message.text.lower()
    
    if '–∫—É—Ä—Å' in text:
        show_courses(message)
    elif '—Ñ–æ—Ä–º–∞—Ç' in text or '–æ–±—É—á–µ–Ω' in text:
        bot.reply_to(message, COURSES_DATA["format"])
    elif '–æ–ø—ã—Ç' in text or '–Ω—É–∂–µ–Ω' in text:
        bot.reply_to(message, COURSES_DATA["experience"])
    elif '–ø–æ–ª—É—á–∏—Ç–µ' in text or '—á—Ç–æ' in text:
        bot.reply_to(message, COURSES_DATA["benefits"])
    elif '–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å' in text or '–∫—Ç–æ' in text:
        bot.reply_to(message, COURSES_DATA["teacher"])
    elif '—Å—Ç–æ–∏–º–æ—Å—Ç—å' in text or '—Ü–µ–Ω–∞' in text or '—Ä—É–±–ª' in text:
        bot.reply_to(message, COURSES_DATA["pricing"])
    elif '—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è' in text or '–∑–∞–ø–∏—Å–∞—Ç—å—Å—è' in text:
        bot.reply_to(message, COURSES_DATA["registration"])
    elif '–∫–æ–Ω—Ç–∞–∫—Ç' in text:
        bot.reply_to(message, COURSES_DATA["contacts"])
    else:
        # –ï—Å–ª–∏ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        bot.reply_to(message, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:", reply_markup=create_main_menu())

def show_courses(message):
    courses_text = "üìö –ù–∞—à–∏ –∫—É—Ä—Å—ã:\n\n"
    
    for key, course in COURSES_DATA["courses"].items():
        courses_text += f"üéì {course['name']}\n{course['description']}\n\n"
    
    courses_text += "–û–±–∞ –∫—É—Ä—Å–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã –Ω–∞ 3,5 —á–∞—Å–∞, –ø—Ä–æ—Ö–æ–¥—è—Ç –≤ –≤–µ—á–µ—Ä–Ω–µ–µ –≤—Ä–µ–º—è, –º–∞—Ç–µ—Ä–∏–∞–ª –ø–æ–¥–∞—ë—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º, —á—Ç–æ–±—ã –¥–∞–∂–µ –Ω–æ–≤–∏—á–∫–∏ –ª–µ–≥–∫–æ –≤–∫–ª—é—á–∏–ª–∏—Å—å –≤ —Ä–∞–±–æ—Ç—É."
    
    bot.reply_to(message, courses_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /courses
@bot.message_handler(commands=['courses'])
def send_courses(message):
    show_courses(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /contacts
@bot.message_handler(commands=['contacts'])
def send_contacts(message):
    bot.reply_to(message, COURSES_DATA["contacts"])

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
def log_message(message):
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    text = message.text
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    
    log_entry = f"[{timestamp}] User: {user_id} (@{username}) {first_name}: {text}\n"
    
    with open('bot_log.txt', 'a', encoding='utf-8') as f:
        f.write(log_entry)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    print("ü§ñ –ë–æ—Ç AI-Adminpriority –∑–∞–ø—É—â–µ–Ω!")
    print("üìù –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    
    try:
        bot.polling(none_stop=True, interval=0)
    except KeyboardInterrupt:
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
